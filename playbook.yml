---
- name: Установка Docker, Node Exporter и Nginx в контейнерах
  hosts: your_debian_host
  become: yes
  tasks:
    - name: Обновить кеш пакетов
      apt:
        update_cache: yes

    - name: Установить зависимости
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Установить Docker
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_lsb.codename }} stable
        state: present
      notify: 
        - Update apt and install docker-ce

    - name: Update apt and install docker-ce
      apt:
        update_cache: yes
        name: docker-ce
        state: present

    - name: Запустить сервис Docker и настроить автозапуск
      service:
        name: docker
        enabled: yes
        state: started

    - name: Скачать Node Exporter
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-amd64.tar.gz"
        dest: "/tmp/node_exporter.tar.gz"

    - name: Распаковать Node Exporter
      ansible.builtin.unarchive:
        src: "/tmp/node_exporter.tar.gz"
        dest: "/opt/"
        remote_src: yes
      become: yes

    - name: Переименовать папку Node Exporter
      shell: mv /opt/node_exporter-* /opt/node_exporter
      become: yes

    - name: Создать systemd unit для Node Exporter
      template:
        src: node_exporter.service.j2
        dest: /etc/systemd/system/node_exporter.service
      notify:
        - Restart Node Exporter

    - name: Открыть порт 9000 в файрволе
      ansible.builtin.firewalld:
        port: 9000/tcp
        permanent: yes
        state: enabled
      become: yes

    - name: Запустить Node Exporter и настроить автозапуск
      service:
        name: node_exporter
        enabled: yes
        state: started

    - name: Установить Nginx в Docker-контейнере
      docker_container:
        name: nginx
        image: nginx
        ports:
          - "80:80"
        restart_policy: always